name: CI

on:
  push:
jobs:
  scan_ruby:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for common Rails security vulnerabilities using static analysis
        run: bin/brakeman --no-pager

  scan_js:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Scan for security vulnerabilities in JavaScript dependencies
        run: bin/importmap audit

  lint:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: .ruby-version
          bundler-cache: true

      - name: Lint code for consistent style
        run: bin/rubocop -f github

  test:
    if: ${{ !contains(github.event.head_commit.message, '[skip-ci]') }}
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14
        ports:
          - "5432:5432"
        env:
          POSTGRES_DB: rails_test
          POSTGRES_USER: rails
          POSTGRES_PASSWORD: password

      env:
        RAILS_ENV: test
        DATABASE_URL: "postgres://rails:password@localhost:5432/rails_test"
        DISABLE_BOOTSNAP: "1"
      steps:
        - name: Checkout code
          uses: actions/checkout@v4

        - name: Install libvips
          run: sudo apt-get update && sudo apt-get install -y libvips

        - name: Install Ruby and gems
          uses: ruby/setup-ruby@v1
          with:
            bundler-cache: true

        - uses: actions/setup-node@v4
          with:
            node-version: 18
        - run: npm ci
        - name: Set up database schema
          run: bin/rails db:schema:load

        - name: Run tests
          run: bundle exec rspec
  deploy:
    name: Déploiement sur Scalingo
    runs-on: ubuntu-latest

    needs: [test, lint]

    if: ${{ (github.ref == 'refs/heads/staging') && !contains(github.event.head_commit.message, '[skip-deploy]') }}

    steps:
      - name: Install Scalingo CLI
        run: curl -O https://cli-dl.scalingo.com/install && bash install

      - run: scalingo login --api-token ${{ secrets.SCALINGO_TOKEN }}
      - name: Déploiement sur staging
        if: ${{ github.ref == 'refs/heads/staging' }}
        run: scalingo --app acces-cible-staging integration-link-manual-deploy staging
